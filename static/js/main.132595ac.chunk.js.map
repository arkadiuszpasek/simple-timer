{"version":3,"sources":["reducers/timeReducer.js","reducers/audioReducer.js","reducers/themeReducer.js","reducers/index.js","actions/types.js","components/navigation/Nav.js","actions/index.js","configs.js","components/pages/Settings.js","components/timer/TimeDisplay.js","components/timer/timeLogic.js","components/timer/TimeCard.js","components/pages/QuickStart.js","components/timer/TimesGrid.js","components/timer/Reset.js","components/timer/Timer.js","styles/GlobalStyles.js","components/App.js","index.js"],"names":["INITIAL_STATE","hours","minutes","seconds","addTimeValues","state","values","time","timeTick","t","_","cloneDeep","SOUNDS","ding","url","fullName","w3","INITIAL_AUDIO","name","sound","Audio","constructAudioObject","themes","combineReducers","action","type","payload","audio","form","settingsFormReducer","theme","Nav","className","to","changeSound","soundName","LOCALSTORAGE","key","light","dark","Settings","onSoundSelectChange","e","props","target","value","onToggleThemeClick","toggleTheme","onStore","localStorage","setItem","renderOptions","Object","keys","map","renderSoundList","Field","component","onChange","onClick","play","renderModal","onSubmit","renderToggleThemeButton","renderSaving","checked","this","readOnly","role","tabIndex","onKeyDown","ReactDOM","createPortal","document","querySelector","React","Component","reduxForm","connect","storedSound","getItem","initialValues","soundSelect","TimeDisplay","hourS","toString","minS","secS","renderTime","TimeCard","constructTimeAction","timeState","unit","addTime","timeObject","QuickStart","TimesGrid","Reset","resetTime","Timer","interval","setInterval","prevProps","clearInterval","lightTheme","color","primaryColor","secondaryColor","thirdColor","background","hoverColor","navigationColor","darkTheme","createGlobalStyle","App","dispatch","useDispatch","useSelector","useEffect","setTheme","basename","path","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","reducers","render","getElementById"],"mappings":"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","file":"static/js/main.132595ac.chunk.js","sourcesContent":["import _ from 'lodash';\nimport { ADD_TIME, RESET_TIME, TIME_TICK } from '../actions/types';\n\nconst INITIAL_STATE = {\n  hours: 0,\n  minutes: 0,\n  seconds: 0,\n};\n\nconst addTimeValues = (state, values) => {\n  const time = {\n    hours: (state.hours + values.hours),\n    minutes: (state.minutes + values.minutes),\n    seconds: (state.seconds + values.seconds),\n  };\n\n  while (time.seconds > 59) {\n    time.seconds -= 60;\n    time.minutes += 1;\n  }\n  while (time.minutes > 59) {\n    time.minutes -= 60;\n    time.hours += 1;\n  }\n\n  return time;\n};\n\nconst timeTick = (time) => {\n  const t = _.cloneDeep(time);\n  if (t.seconds > 0) {\n    t.seconds -= 1;\n  } else if (t.minutes > 0) {\n    t.minutes -= 1;\n    t.seconds = 59;\n  } else if (t.hours > 0) {\n    t.hours -= 1;\n    t.minutes = 59;\n    t.seconds = 59;\n  }\n\n  return t;\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ADD_TIME:\n      return addTimeValues(state, action.payload);\n    case TIME_TICK:\n      return timeTick(state);\n    case RESET_TIME:\n      return { ...INITIAL_STATE };\n    default:\n      return state;\n  }\n};\n","import { SOUND_CHANGE } from '../actions/types';\n\nexport const SOUNDS = {\n  ding: {\n    url:\n      'https://raw.githubusercontent.com/arkadiuszpasek/simple-timer/master/res/ding.mp3',\n    fullName: 'Gentle Bell',\n  },\n  w3: {\n    url:\n      'https://raw.githubusercontent.com/arkadiuszpasek/Online-Youtube-Timer/master/res/w3QuestSound.mp3',\n    fullName: 'Witcher 3 Quest Sound',\n  },\n};\n\nconst INITIAL_AUDIO = {\n  name: 'ding',\n  fullName: SOUNDS.ding.fullName,\n  sound: new Audio(SOUNDS.ding.url),\n};\n\nconst constructAudioObject = (name) => ({\n  name,\n  sound: new Audio(SOUNDS[name].url),\n  fullName: SOUNDS[name].fullName,\n});\n\nexport default (state = INITIAL_AUDIO, action) => {\n  switch (action.type) {\n    case SOUND_CHANGE:\n      return constructAudioObject(action.payload);\n    default:\n      return state;\n  }\n};\n","import { THEME_CHANGE, THEME_TOGGLE } from '../actions/types';\n\nconst themes = {\n  light: 'light',\n  dark: 'dark',\n};\n\nexport default (state = themes.dark, action) => {\n  switch (action.type) {\n    case THEME_CHANGE:\n      return action.payload;\n    case THEME_TOGGLE:\n      return state === themes.light ? themes.dark : themes.light;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { reducer as settingsFormReducer } from 'redux-form';\n\nimport timeReducer from './timeReducer';\nimport audioReducer from './audioReducer';\nimport themeReducer from './themeReducer';\n\nexport default combineReducers({\n  time: timeReducer,\n  audio: audioReducer,\n  form: settingsFormReducer,\n  theme: themeReducer,\n});\n","/* eslint-disable import/prefer-default-export */\nexport const ADD_TIME = 'ADD_TIME';\nexport const RESET_TIME = 'RESET_TIME';\nexport const TIME_TICK = 'TIME_TICK';\nexport const SOUND_CHANGE = 'SOUND_CHANGE';\nexport const THEME_TOGGLE = 'THEME_TOGGLE';\nexport const THEME_CHANGE = 'THEME_CHANGE';\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Nav.scss';\n\nconst Nav = () => (\n  <nav className=\"nav\">\n    <ul>\n      <li>\n        <Link to=\"/\">\n          <i className=\"far fa-clock\" />\n        </Link>\n      </li>\n    </ul>\n    <ul>\n      <li>\n        <Link to=\"/quick-start\">Quick Start</Link>\n      </li>\n      <li>\n        <Link to=\"/settings\">\n          <i className=\"fas fa-cogs\" />\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Nav;\n","/* eslint-disable import/prefer-default-export */\nimport * as types from './types';\n\nexport const addTime = (timeObject) => ({\n  type: types.ADD_TIME,\n  payload: timeObject,\n});\n\nexport const resetTime = () => ({\n  type: types.RESET_TIME,\n});\n\nexport const timeTick = () => ({\n  type: types.TIME_TICK,\n});\n\nexport const changeSound = (soundName) => ({\n  type: types.SOUND_CHANGE,\n  payload: soundName,\n});\n\nexport const toggleTheme = () => ({\n  type: types.THEME_TOGGLE,\n});\n\nexport const setTheme = (theme) => ({\n  type: types.THEME_CHANGE,\n  payload: theme,\n});\n","/* eslint-disable import/prefer-default-export */\nexport const LOCALSTORAGE = {\n  sound: 'sound',\n  theme: {\n    key: 'theme',\n    light: 'light',\n    dark: 'dark',\n  },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { changeSound, toggleTheme } from '../../actions/index';\nimport { SOUNDS } from '../../reducers/audioReducer';\nimport { LOCALSTORAGE } from '../../configs';\n\nimport './Settings.scss';\n\nclass Settings extends React.Component {\n  onSoundSelectChange = (e) => {\n    const { changeSound } = this.props;\n    changeSound(e.target.value);\n  };\n\n  onToggleThemeClick = () => {\n    const { toggleTheme } = this.props;\n    toggleTheme();\n  };\n\n  onStore = () => {\n    const {\n      audio: { name: soundName },\n      theme,\n    } = this.props;\n    localStorage.setItem(LOCALSTORAGE.sound, soundName);\n    localStorage.setItem(LOCALSTORAGE.theme.key, theme);\n  };\n\n  renderOptions = () =>\n    Object.keys(SOUNDS).map((sound) => {\n      const { fullName: soundName } = SOUNDS[sound];\n      // console.log(selectedSound, sound, selectedSound === sound);\n      return (\n        <option\n          key={sound}\n          value={sound}\n          // autoComplete=\"off\"\n          // selected={selectedSound === sound}\n        >\n          {soundName}\n        </option>\n      );\n    });\n\n  renderSoundList = () => {\n    const {\n      audio: { sound },\n      // initialValues: { stateSound: selectedSound },\n    } = this.props;\n    // console.log(selectedSound);\n    return (\n      <div>\n        <p className=\"form-control form-label\">Finish sound</p>\n        <Field\n          name=\"soundSelect\"\n          component=\"select\"\n          // autoComplete=\"off\"\n          onChange={this.onSoundSelectChange}\n          className=\"form-control select\"\n          // value={selectedSound}\n        >\n          {this.renderOptions()}\n        </Field>\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary form-control\"\n            onClick={() => sound.play()}\n          >\n            Play sound\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  renderToggleThemeButton() {\n    const { theme } = this.props;\n    const checked = theme === LOCALSTORAGE.theme.dark;\n\n    return (\n      <div className=\"form-control\">\n        <p>Use dark theme</p>\n        <label className=\"switch\">\n          <input type=\"checkbox\" checked={checked} readOnly />\n          <span\n            role=\"button\"\n            tabIndex={0}\n            className=\"slider\"\n            onClick={this.onToggleThemeClick}\n            onKeyDown={this.onToggleThemeClick}\n          />\n        </label>\n      </div>\n    );\n  }\n\n  renderSaving() {\n    return (\n      <div>\n        <p className=\"form-control\">\n          <small>\n            Changes are remembered dynamically for the current session, while\n            hitting &apos;Store&apos; will save them in your browser storage.\n          </small>\n        </p>\n        <div className=\"form-group text-right\">\n          <button\n            type=\"button\"\n            className=\"btn btn-dark form-control\"\n            onClick={this.onStore}\n          >\n            Store\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  renderModal = () => (\n    <div className=\"modal-dialog\">\n      <div className=\"modal-content\">\n        <div className=\"modal-body\">\n          <form onSubmit={this.onSubmit}>\n            {this.renderSoundList()}\n            {this.renderToggleThemeButton()}\n            {this.renderSaving()}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n\n  render() {\n    return ReactDOM.createPortal(\n      this.renderModal(),\n      document.querySelector('#modal'),\n    );\n  }\n}\n\nSettings.propTypes = {\n  audio: PropTypes.objectOf(PropTypes.any).isRequired,\n  theme: PropTypes.string.isRequired,\n  changeSound: PropTypes.func.isRequired,\n  toggleTheme: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const storedSound = localStorage.getItem(LOCALSTORAGE.sound);\n\n  return {\n    audio: state.audio,\n    theme: state.theme,\n    initialValues: {\n      soundSelect: storedSound || state.audio.name,\n    },\n  };\n};\n\nconst form = reduxForm({\n  form: 'settings',\n})(Settings);\n\nexport default connect(mapStateToProps, {\n  changeSound,\n  toggleTheme,\n})(form);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { renderTime } from './timeLogic';\n\nclass TimeDisplay extends React.Component {\n  render() {\n    const { time } = this.props;\n    return (\n      <div className=\"\">\n        <h1>{renderTime(time)}</h1>\n      </div>\n    );\n  }\n}\n\nTimeDisplay.propTypes = {\n  time: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = (state) => ({ time: state.time });\n\nexport default connect(mapStateToProps)(TimeDisplay);\n","/* eslint-disable import/prefer-default-export */\nexport const renderTime = (time) => {\n  const { hours, minutes, seconds } = time;\n  let hourS = hours.toString();\n  let minS = minutes.toString();\n  let secS = seconds.toString();\n  if (hours < 10) hourS = `0${hourS}`;\n  if (minS < 10) minS = `0${minS}`;\n  if (secS < 10) secS = `0${secS}`;\n\n  return `${hourS}:${minS}:${secS}`;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addTime } from '../../actions';\n\nclass TimeCard extends React.Component {\n  constructTimeAction = () => {\n    const { time, unit } = this.props;\n    const timeState = {\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n    };\n\n    switch (unit) {\n      case 'h':\n        timeState.hours = time;\n        break;\n      case 'm':\n        timeState.minutes = time;\n        break;\n      case 's':\n        timeState.seconds = time;\n        break;\n      default:\n        break;\n    }\n\n    return timeState;\n  };\n\n  render() {\n    const { time, unit, addTime } = this.props;\n    return (\n      <div\n        className=\"card btn\"\n        onClick={() => addTime(this.constructTimeAction())}\n        onKeyDown={() => addTime(this.constructTimeAction())}\n        tabIndex=\"0\"\n        role=\"button\"\n      >\n        <h2>\n          {time}\n          {unit}\n        </h2>\n      </div>\n    );\n  }\n}\n\nTimeCard.propTypes = {\n  time: PropTypes.number.isRequired,\n  unit: PropTypes.string.isRequired,\n  addTime: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {\n  addTime,\n})(TimeCard);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport TimeDisplay from '../timer/TimeDisplay';\nimport TimeCard from '../timer/TimeCard';\n\nimport './QuickStart.scss';\n\nconst QuickStart = () => (\n  <div className=\"container text-center\">\n    <TimeDisplay />\n    <div className=\"quickstart-flex mt mb\">\n      <p>\n        The timer is stopped on this page, but normally it is always on.\n        <br />\n        By clicking time cards you add time to it.\n        <br />\n        Try clicking this 10 minute card twice to set the timer for 20 minutes!\n      </p>\n      <TimeCard time={10} unit=\"m\" />\n    </div>\n    <Link to=\"/\">\n      <div className=\"btn btn-secondary wide-btn mt-big\">\n        Go back to the main page and see it going!\n      </div>\n    </Link>\n  </div>\n);\n\nexport default QuickStart;\n","import React from 'react';\nimport TimeCard from './TimeCard';\n\nclass TimesGrid extends React.Component {\n  render() {\n    return (\n      <div className=\"grid mt mb\">\n        <TimeCard time={5} unit=\"h\" />\n        <TimeCard time={2} unit=\"h\" />\n        <TimeCard time={1} unit=\"h\" />\n\n        <TimeCard time={30} unit=\"m\" />\n        <TimeCard time={15} unit=\"m\" />\n        <TimeCard time={10} unit=\"m\" />\n\n        <TimeCard time={5} unit=\"m\" />\n        <TimeCard time={2} unit=\"m\" />\n        <TimeCard time={1} unit=\"m\" />\n\n        <TimeCard time={30} unit=\"s\" />\n        <TimeCard time={10} unit=\"s\" />\n        <TimeCard time={5} unit=\"s\" />\n      </div>\n    );\n  }\n}\n\nexport default TimesGrid;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { resetTime } from '../../actions';\n\nclass Reset extends React.Component {\n  render() {\n    const { resetTime } = this.props;\n    return (\n      <div\n        role=\"button\"\n        tabIndex=\"0\"\n        className=\"btn btn-secondary wide-btn\"\n        onClick={() => resetTime()}\n        onKeyDown={() => resetTime()}\n      >\n        <h1 className=\"pt-2\">Reset</h1>\n      </div>\n    );\n  }\n}\n\nReset.propTypes = {\n  resetTime: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {\n  resetTime,\n})(Reset);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport TimeDisplay from './TimeDisplay';\nimport TimesGrid from './TimesGrid';\nimport Reset from './Reset';\nimport { timeTick } from '../../actions';\n\nimport './Timer.scss';\n\nclass Timer extends React.Component {\n  componentDidMount() {\n    const { timeTick } = this.props;\n    this.interval = setInterval(() => timeTick(), 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      time,\n      audio: { sound },\n    } = this.props;\n\n    if (\n      prevProps.time.hours === time.hours &&\n      prevProps.time.minutes === time.minutes &&\n      prevProps.time.seconds === time.seconds\n    )\n      return;\n\n    if (time.hours === 0 && time.minutes === 0 && time.seconds === 0) {\n      sound.play();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <div className=\"container text-center\">\n        <TimeDisplay />\n        <TimesGrid />\n        <Reset />\n      </div>\n    );\n  }\n}\n\nTimer.propTypes = {\n  time: PropTypes.objectOf(PropTypes.any).isRequired,\n  audio: PropTypes.objectOf(PropTypes.any).isRequired,\n  timeTick: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  time: state.time,\n  audio: state.audio,\n});\n\nexport default connect(mapStateToProps, {\n  timeTick,\n})(Timer);\n","import { createGlobalStyle } from 'styled-components';\n\nconst primaryColor = '#128a6c';\nconst primaryDark = '#043d2f';\nconst primaryLight = '#31d6ad';\n\nconst darkGray = '#3f3f3f';\nconst lightGray = '#f3f3f3';\n\nexport const lightTheme = {\n  color: 'black',\n  primaryColor,\n  secondaryColor: primaryLight,\n  thirdColor: primaryDark,\n\n  background: lightGray,\n  hoverColor: primaryColor,\n  navigationColor: primaryLight,\n};\n\nexport const darkTheme = {\n  color: 'white',\n  primaryColor: primaryDark,\n  secondaryColor: primaryColor,\n  thirdColor: primaryLight,\n\n  background: darkGray,\n  hoverColor: primaryLight,\n  navigationColor: primaryColor,\n};\n\nexport default createGlobalStyle`\n  *,\n  body,\n  html {\n    color: ${({ theme }) => theme.color};\n  }\n  #bg {\n    background-color: ${({ theme }) => theme.background};\n  }\n\n  .card {\n    background-color: ${({ theme }) => theme.secondaryColor};\n  }\n  .nav::after{\n    background-color: ${({ theme }) => theme.secondaryColor};\n  }\n  .nav {\n    ul {\n      li {\n        *:hover {\n          color: ${({ theme }) => theme.primaryColor};\n        }\n      }\n    }\n  }\n\n  .modal-dialog::before {\n    background-color: ${({ theme }) => theme.secondaryColor};\n  }\n\n  .form-label {\n    color: ${({ theme }) => theme.color};\n  }\n\n  .btn-primary {\n    background-color: ${primaryColor};\n  }\n  \n  .btn-secondary {\n    background-color: ${({ theme }) => theme.secondaryColor};\n  }\n  \n  .btn-dark {\n    background-color: ${primaryDark};\n  }  \n`;\n","import React, { useEffect } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\n\nimport Nav from './navigation/Nav';\nimport Settings from './pages/Settings';\nimport QuickStart from './pages/QuickStart';\nimport Timer from './timer/Timer';\nimport { changeSound, setTheme } from '../actions';\nimport { LOCALSTORAGE } from '../configs';\n\nimport GlobalStlyes, { darkTheme, lightTheme } from '../styles/GlobalStyles';\nimport './App.scss';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const theme = useSelector((state) => state.theme);\n\n  useEffect(() => {\n    const sound = localStorage.getItem(LOCALSTORAGE.sound);\n    const theme = localStorage.getItem(LOCALSTORAGE.theme.key);\n    if (theme) {\n      dispatch(setTheme(theme));\n    }\n    if (sound) {\n      dispatch(changeSound(sound));\n    }\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider\n      theme={theme === LOCALSTORAGE.theme.light ? lightTheme : darkTheme}\n    >\n      <GlobalStlyes />\n      <HashRouter basename=\"/\">\n        <Nav />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Timer />\n          </Route>\n          <Route path=\"/settings\">\n            <Settings />\n          </Route>\n          <Route path=\"/quick-start\">\n            <QuickStart />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport reducers from './reducers';\nimport App from './components/App';\n\nconst composeEnhancers =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(reducers, composeEnhancers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}